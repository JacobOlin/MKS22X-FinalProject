Hero h;
int coolDown;
Enemies u, d, l, r;
ArrayList<Enemies> Enemies;
ArrayList<Wall> ListOfWalls;
int roomX = 2;
int roomY = 5;
MovableWall movingWall;
ArrayList<ArrayList<ArrayList<Wall>>> ListOfRooms;
ArrayList<ArrayList<ArrayList<MovableWall>>> MovableRoomsList;
ArrayList<MovableWall> ListOfMovableWalls;
int[][] WallsInput = {{}, 
  {0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10, 1, 0, 1, 1, 1, 2, 1, 3, 1, 4, 1, 5, 1, 6, 1, 7, 1, 8, 1, 9, 1, 10, 2, 0, 2, 1, 2, 9, 2, 10, 3, 0, 3, 1, 3, 9, 3, 10, 4, 0, 4, 1, 4, 9, 4, 10, 5, 0, 5, 1, 5, 9, 5, 10, 6, 0, 6, 1, /*6,5,*/6, 9, 6, 10, 7, 0, 7, 1, 7, 4, 7, 6, 7, 9, 7, 10, 8, 0, 8, 1, 8, 3, 8, 7, 8, 9, 8, 10, 9, 0, 9, 1, 9, 4, 9, 6, 9, 9, 9, 10, 10, 0, 10, 1, 10, 5, 10, 9, 10, 10, 11, 0, 11, 1, 11, 9, 11, 10, 12, 0, 12, 1, 12, 9, 12, 10, 13, 0, 13, 1, 13, 9, 13, 10, 14, 0, 14, 1, 14, 2, 14, 3, 14, 4, 14, 6, 14, 7, 14, 8, 14, 9, 14, 10, 15, 0, 15, 1, 15, 2, 15, 3, 15, 4, 15, 6, 15, 7, 15, 8, 15, 9, 15, 10}, 
  {0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10, 1, 0, 1, 1, 1, 2, 1, 3, 1, 4, 1, 6, 1, 7, 1, 8, 1, 9, 1, 10, 2, 0, 2, 1, 2, 9, 2, 10, 3, 0, 3, 1, 3, 3, 3, 4, 3, 5, 3, 6, 3, 7, 3, 9, 3, 10, 4, 0, 4, 1, 4, 3, 4, 7, 4, 9, 4, 10, 5, 0, 5, 1, 5, 3, 5, 5, 5, 7, 5, 9, 5, 10, 6, 0, 6, 1, 6, 5, 6, 9, 6, 10, 7, 0, 7, 1, 7, 5, 8, 0, 8, 1, 8, 5, 9, 0, 9, 1, 9, 5, 9, 9, 9, 10, 10, 0, 10, 1, 10, 3, 10, 5, 10, 7, 10, 9, 10, 10, 11, 0, 11, 1, 11, 3, 11, 7, 11, 9, 11, 10, 12, 0, 12, 1, 12, 3, 12, 4, 12, 5, 12, 6, 12, 7, 12, 9, 12, 10, 13, 0, 13, 1, 13, 9, 13, 10, 14, 0, 14, 1, 14, 2, 14, 3, 14, 4, 14, 5, 14, 6, 14, 7, 14, 8, 14, 9, 14, 10, 15, 0, 15, 1, 15, 2, 15, 3, 15, 4, 15, 5, 15, 6, 15, 7, 15, 8, 15, 9, 15, 10}, 
  {}, {}, {}, {}, {}, 
  {0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10, 1, 0, 1, 1, 1, 2, 1, 3, 1, 4, 1, 5, 1, 6, 1, 7, 1, 8, 1, 9, 1, 10, 2, 0, 2, 1, 2, 2, 2, 3, 2, 4, 2, 6, 2, 7, 2, 8, 2, 9, 2, 10, 3, 0, 3, 1, 3, 2, 3, 8, 3, 9, 3, 10, 4, 0, 4, 1, 4, 2, 4, 4, 4, 5, 4, 6, 4, 7, 4, 8, 4, 9, 4, 10, 5, 0, 5, 1, 5, 2, 5, 8, 5, 9, 5, 10, 6, 0, 6, 1, 6, 2, 6, 3, 6, 4, 6, 5, 6, 6, 6, 8, 6, 9, 6, 10, 7, 6, 8, 4, 9, 0, 9, 1, 9, 2, 9, 4, 9, 5, 9, 6, 9, 7, 9, 8, 9, 9, 9, 10, 10, 0, 10, 1, 10, 2, 10, 8, 10, 9, 10, 10, 11, 0, 11, 1, 11, 2, 11, 3, 11, 4, 11, 5, 11, 6, 11, 8, 11, 9, 11, 10, 12, 0, 12, 1, 12, 2, 12, 8, 12, 9, 12, 10, 13, 0, 13, 1, 13, 2, 13, 3, 13, 4, 13, 6, 13, 7, 13, 8, 13, 9, 13, 10, 14, 0, 14, 1, 14, 2, 14, 3, 14, 4, 14, 5, 14, 6, 14, 7, 14, 8, 14, 9, 14, 10, 15, 0, 15, 1, 15, 2, 15, 3, 15, 4, 15, 5, 15, 6, 15, 7, 15, 8, 15, 9, 15, 10}, 
  {}, 
  {0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10, 1, 0, 1, 1, 1, 2, 1, 3, 1, 4, 1, 5, 1, 6, 1, 7, 1, 8, 1, 9, 1, 10, 2, 0, 2, 1, 2, 9, 2, 10, 3, 0, 3, 1, 3, 9, 3, 10, 4, 0, 4, 1, 4, 9, 4, 10, 5, 0, 5, 1, 5, 9, 5, 10, 6, 0, 6, 1, 6, 9, 6, 10, 7, 0, 7, 1, 8, 0, 8, 1, 9, 0, 9, 1, 9, 2, 9, 8, 9, 9, 9, 10, 10, 0, 10, 1, 10, 2, 10, 8, 10, 9, 10, 10, 11, 0, 11, 1, 11, 2, 11, 3, 11, 7, 11, 8, 11, 9, 11, 10, 12, 0, 12, 1, 12, 2, 12, 3, 12, 4, 12, 6, 12, 7, 12, 8, 12, 9, 12, 10, 13, 0, 13, 1, 13, 2, 13, 3, 13, 4, 13, 6, 13, 7, 13, 8, 13, 9, 13, 10, 14, 0, 14, 1, 14, 2, 14, 3, 14, 4, 14, 6, 14, 7, 14, 8, 14, 9, 14, 10, 15, 0, 15, 1, 15, 2, 15, 3, 15, 4, 15, 6, 15, 7, 15, 8, 15, 9, 15, 10}, 
  {0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10, 1, 0, 1, 1, 1, 2, 1, 3, 1, 4, 1, 6, 1, 7, 1, 8, 1, 9, 1, 10, 2, 0, 2, 1, 2, 9, 2, 10, 3, 0, 3, 1, 3, 3, 3, 4, 3, 5, 3, 6, 3, 7, 3, 9, 3, 10, 4, 0, 4, 1, 4, 3, 4, 7, 4, 9, 4, 10, 5, 0, 5, 1, 5, 3, 5, 7, 5, 9, 5, 10, 6, 0, 6, 1, 6, 3, 6, 7, 6, 9, 6, 10, 7, 0, 7, 1, 7, 3, 7, 9, 7, 10, 8, 0, 8, 1, 8, 3, 8, 9, 8, 10, 9, 0, 9, 1, 9, 3, 9, 7, 9, 9, 9, 10, 10, 0, 10, 1, 10, 3, 10, 7, 10, 9, 10, 10, 11, 0, 11, 1, 11, 3, 11, 7, 11, 9, 11, 10, 12, 0, 12, 1, 12, 3, 12, 4, 12, 5, 12, 6, 12, 7, 12, 9, 12, 10, 13, 0, 13, 1, 13, 9, 13, 10, 14, 0, 14, 1, 14, 2, 14, 3, 14, 3, 14, 4, 14, 5, 14, 6, 14, 7, 14, 8, 14, 9, 14, 10, 15, 0, 15, 1, 15, 2, 15, 3, 15, 4, 15, 5, 15, 6, 15, 7, 15, 8, 15, 9, 15, 10}, 
  {0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10, 1, 0, 1, 1, 1, 2, 1, 3, 1, 4, 1, 5, 1, 6, 1, 7, 1, 8, 1, 9, 1, 10, 2, 0, 2, 1, 2, 9, 2, 10, 3, 0, 3, 1, 3, 9, 3, 10, 4, 0, 4, 1, 4, 9, 4, 10, 5, 0, 5, 1, 5, 9, 5, 10, 6, 0, 6, 1, 6, 9, 6, 10, 7, 0, 7, 1, 7, 9, 7, 10, 8, 0, 8, 1, 8, 9, 8, 10, 9, 0, 9, 1, 9, 9, 9, 10, 10, 0, 10, 1, 10, 9, 10, 10, 11, 0, 11, 1, 11, 9, 11, 10, 12, 0, 12, 1, 12, 9, 12, 10, 13, 0, 13, 1, 13, 9, 13, 10, 14, 0, 14, 1, 14, 2, 14, 3, 14, 4, 14, 6, 14, 7, 14, 8, 14, 9, 14, 10, 15, 0, 15, 1, 15, 2, 15, 3, 15, 4, 15, 6, 15, 7, 15, 8, 15, 9, 15, 10}, 
  {0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10, 1, 0, 1, 1, 1, 2, 1, 3, 1, 4, 1, 6, 1, 7, 1, 8, 1, 9, 1, 10, 2, 0, 2, 1, 2, 9, 2, 10, 3, 0, 3, 1, 3, 9, 3, 10, 4, 0, 4, 1, 4, 9, 4, 10, 5, 0, 5, 1, 5, 9, 5, 10, 6, 0, 6, 1, 6, 9, 6, 10, 7, 0, 7, 1, /*7,5,*/8, 0, 8, 1, 9, 0, 9, 1, 9, 9, 9, 10, 10, 0, 10, 1, 10, 9, 10, 10, 11, 0, 11, 1, 11, 9, 11, 10, 12, 0, 12, 1, 12, 9, 12, 10, 13, 0, 13, 1, 13, 9, 13, 10, 14, 0, 14, 1, 14, 2, 14, 3, 14, 4, 14, 6, 14, 7, 14, 8, 14, 9, 14, 10, 15, 0, 15, 1, 15, 2, 15, 3, 15, 4, 15, 6, 15, 7, 15, 8, 15, 9, 15, 10}, 
  {0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10, 1, 0, 1, 1, 1, 2, 1, 3, 1, 4, 1, 6, 1, 7, 1, 8, 1, 9, 1, 10, 2, 0, 2, 1, 2, 9, 2, 10, 3, 0, 3, 1, 3, 3, 3, 7, 3, 9, 3, 10, 4, 0, 4, 1, 4, 3, 4, 7, 4, 9, 4, 10, 5, 0, 5, 1, 5, 9, 5, 10, 6, 0, 6, 1, 6, 9, 6, 10, 7, 5, 8, 5, 9, 0, 9, 1, 9, 9, 9, 10, 10, 0, 10, 1, 10, 9, 10, 10, 11, 0, 11, 1, 11, 3, 11, 7, 11, 9, 11, 10, 12, 0, 12, 1, 12, 3, 12, 7, 12, 9, 12, 10, 13, 0, 13, 1, 13, 9, 13, 10, 14, 0, 14, 1, 14, 2, 14, 3, 14, 4, 14, 6, 14, 7, 14, 8, 14, 9, 14, 10, 15, 0, 15, 1, 15, 2, 15, 3, 15, 4, 15, 6, 15, 7, 15, 8, 15, 9, 15, 10}, 
  {0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10, 1, 0, 1, 1, 1, 2, 1, 3, 1, 4, 1, 6, 1, 7, 1, 8, 1, 9, 1, 10, 2, 0, 2, 1, 2, 9, 2, 10, 3, 0, 3, 1, 3, 9, 3, 10, 4, 0, 4, 1, 4, 4, 4, 6, 4, 9, 4, 10, 5, 0, 5, 1, 5, 9, 5, 10, 6, 0, 6, 1, 6, 9, 6, 10, 7, 0, 7, 1, 8, 0, 8, 1, 9, 0, 9, 1, 9, 9, 9, 10, 10, 0, 10, 1, 10, 9, 10, 10, 11, 0, 11, 1, 11, 4, 11, 6, 11, 9, 11, 10, 12, 0, 12, 1, 12, 9, 12, 10, 13, 0, 13, 1, 13, 9, 13, 10, 14, 0, 14, 1, 14, 2, 14, 3, 14, 4, 14, 6, 14, 7, 14, 8, 14, 9, 14, 10, 15, 0, 15, 1, 15, 2, 15, 3, 15, 4, 15, 6, 15, 7, 15, 8, 15, 9, 15, 10}, 
  {0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10, 1, 0, 1, 1, 1, 2, 1, 3, 1, 4, 1, 6, 1, 7, 1, 8, 1, 9, 1, 10, 2, 0, 2, 1, 2, 9, 2, 10, 3, 0, 3, 1, 3, 3, 3, 5, 3, 7, 3, 9, 3, 10, 4, 0, 4, 1, 4, 9, 4, 10, 5, 0, 5, 1, 5, 3, 5, 5, 5, 7, 5, 9, 5, 10, 6, 0, 6, 1, 6, 9, 6, 10, 7, 3, 7, 5, 7, 7, 7, 9, 7, 10, 8, 3, 8, 5, 8, 7, 8, 9, 8, 10, 9, 0, 9, 1, 9, 9, 9, 10, 10, 0, 10, 1, 10, 3, 10, 5, 10, 7, 10, 9, 10, 10, 11, 0, 11, 1, 11, 9, 11, 10, 12, 0, 12, 1, 12, 3, 12, 5, 12, 7, 12, 9, 12, 10, 13, 0, 13, 1, 13, 9, 13, 10, 14, 0, 14, 1, 14, 2, 14, 3, 14, 4, 14, 5, 14, 6, 14, 7, 14, 8, 14, 9, 14, 10, 15, 0, 15, 1, 15, 2, 15, 3, 15, 4, 15, 4, 15, 5, 15, 6, 15, 7, 15, 8, 15, 9, 15, 10}, 
  {}, {}, 
  {0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10, 1, 0, 1, 1, 1, 2, 1, 3, 1, 4, 1, 5, 1, 6, 1, 7, 1, 8, 1, 9, 1, 10, 2, 0, 2, 1, 2, 9, 2, 10, 3, 0, 3, 1, 3, 9, 3, 10, 4, 0, 4, 1, 4, 9, 4, 10, 5, 0, 5, 1, 5, 9, 5, 10, 6, 0, 6, 1, 6, 9, 6, 10, 7, 4, 7, 5, 7, 6, 7, 9, 7, 10, 8, 4, 8, 5, 8, 6, 8, 9, 8, 10, 9, 0, 9, 1, 9, 9, 9, 10, 10, 0, 10, 1, 10, 9, 10, 10, 11, 0, 11, 1, 11, 9, 11, 10, 12, 0, 12, 1, 12, 9, 12, 10, 13, 0, 13, 1, 13, 9, 13, 10, 14, 0, 14, 1, 14, 2, 14, 3, 14, 4, 14, 6, 14, 7, 14, 8, 14, 9, 14, 10, 15, 0, 15, 1, 15, 2, 15, 3, 15, 4, 15, 6, 15, 7, 15, 8, 15, 9, 15, 10}, 
  {0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10, 1, 0, 1, 1, 1, 2, 1, 3, 1, 4, 1, 6, 1, 7, 1, 8, 1, 9, 1, 10, 2, 0, 2, 1, 2, 9, 2, 10, 3, 0, 3, 1, 3, 9, 3, 10, 4, 0, 4, 1, 4, 4, 4, 6, 4, 9, 4, 10, 5, 0, 5, 1, 5, 9, 5, 10, 6, 0, 6, 1, 6, 9, 6, 10, 9, 0, 9, 1, 9, 9, 9, 10, 10, 0, 10, 1, 10, 9, 10, 10, 11, 0, 11, 1, 11, 4, 11, 6, 11, 9, 11, 10, 12, 0, 12, 1, 12, 9, 12, 10, 13, 0, 13, 1, 13, 9, 13, 10, 14, 0, 14, 1, 14, 2, 14, 3, 14, 4, 14, 6, 14, 7, 14, 8, 14, 9, 14, 10, 15, 0, 15, 1, 15, 2, 15, 3, 15, 4, 15, 6, 15, 7, 15, 8, 15, 9, 15, 10}, 
  {0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10, 1, 0, 1, 1, 1, 2, 1, 3, 1, 4, 1, 6, 1, 7, 1, 8, 1, 9, 1, 10, 2, 0, 2, 1, 2, 9, 2, 10, 3, 0, 3, 1, 3, 9, 3, 10, 4, 0, 4, 1, 4, 3, 4, 7, 4, 9, 4, 10, 5, 0, 5, 1, 5, 9, 5, 10, 6, 0, 6, 1, 6, 9, 6, 10, 7, 9, 7, 10, 8, 9, 8, 10, 9, 0, 9, 1, 9, 9, 9, 10, 10, 0, 10, 1, 10, 9, 10, 10, 11, 0, 11, 1, 11, 3, 11, 7, 11, 9, 11, 10, 12, 0, 12, 1, 12, 9, 12, 10, 13, 0, 13, 1, 13, 9, 13, 10, 14, 0, 14, 1, 14, 2, 14, 3, 14, 4, 14, 5, 14, 6, 14, 7, 14, 8, 14, 9, 14, 10, 15, 0, 15, 1, 15, 2, 15, 3, 15, 4, 15, 5, 15, 6, 15, 7, 15, 8, 15, 9, 15, 10}, 
  {}, {}, {}, {}, 
  {0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10, 1, 0, 1, 1, 1, 2, 1, 3, 1, 4, 1, 5, 1, 6, 1, 7, 1, 8, 1, 9, 1, 10, 2, 0, 2, 1, 2, 9, 2, 10, 3, 0, 3, 1, 3, 9, 3, 10, 4, 0, 4, 1, 4, 9, 4, 10, 5, 0, 5, 1, 5, 9, 5, 10, 6, 0, 6, 1, 6, 9, 6, 10, 7, 4, 7, 5, 7, 6, 8, 4, 8, 5, 8, 6, 9, 0, 9, 1, 9, 9, 9, 10, 10, 0, 10, 1, 10, 9, 10, 10, 11, 0, 11, 1, 11, 9, 11, 10, 12, 0, 12, 1, 12, 9, 12, 10, 13, 0, 13, 1, 13, 9, 13, 10, 14, 0, 14, 1, 14, 2, 14, 3, 14, 4, 14, 5, 14, 6, 14, 7, 14, 8, 14, 9, 14, 10, 15, 0, 15, 1, 15, 2, 15, 3, 15, 4, 15, 5, 15, 6, 15, 7, 15, 8, 15, 9, 15, 10}, 
  {}, {}, {}, {}, 
  {0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10, 1, 0, 1, 1, 1, 2, 1, 3, 1, 4, 1, 5, 1, 6, 1, 7, 1, 8, 1, 9, 1, 10, 2, 0, 2, 1, 2, 9, 2, 10, 3, 0, 3, 1, 3, 9, 3, 10, 4, 0, 4, 1, 4, 9, 4, 10, 5, 0, 5, 1, 5, 9, 5, 10, 6, 0, 6, 1, 6, 9, 6, 10, 7, 0, 7, 1, 7, 9, 7, 10, 8, 0, 8, 1, 8, 9, 8, 10, 9, 0, 9, 1, 9, 9, 9, 10, 10, 0, 10, 1, 10, 9, 10, 10, 11, 0, 11, 1, 11, 9, 11, 10, 12, 0, 12, 1, 12, 9, 12, 10, 13, 0, 13, 1, 13, 9, 13, 10, 14, 0, 14, 1, 14, 2, 14, 3, 14, 4, 14, 6, 14, 7, 14, 8, 14, 9, 14, 10, 15, 0, 15, 1, 15, 2, 15, 3, 15, 4, 15, 6, 15, 7, 15, 8, 15, 9, 15, 10}, 
  {0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10, 1, 0, 1, 1, 1, 2, 1, 3, 1, 4, 1, 6, 1, 7, 1, 8, 1, 9, 1, 10, 2, 0, 2, 1, 2, 9, 2, 10, 3, 0, 3, 1, 3, 3, 3, 5, 3, 7, 3, 9, 3, 10, 4, 0, 4, 1, 4, 9, 4, 10, 5, 0, 5, 1, 5, 9, 5, 10, 6, 0, 6, 1, 6, 3, 6, 5, 6, 7, 6, 9, 6, 10, 7, 10, 8, 10, 9, 0, 9, 1, 9, 3, 9, 5, 9, 7, 9, 9, 9, 10, 10, 0, 10, 1, 10, 9, 10, 10, 11, 0, 11, 1, 11, 9, 11, 10, 12, 0, 12, 1, 12, 3, 12, 5, 12, 7, 12, 9, 12, 10, 13, 0, 13, 1, 13, 9, 13, 10, 14, 0, 14, 1, 14, 2, 14, 3, 14, 4, 14, 6, 14, 7, 14, 8, 14, 9, 14, 10, 15, 0, 15, 1, 15, 2, 15, 3, 15, 4, 15, 6, 15, 7, 15, 8, 15, 9, 15, 10}, 
  {0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10, 1, 0, 1, 1, 1, 2, 1, 3, 1, 4, 1, 6, 1, 7, 1, 8, 1, 9, 1, 10, 2, 0, 2, 1, 2, 9, 2, 10, 3, 0, 3, 1, 3, 9, 3, 10, 4, 0, 4, 1, 4, 4, 4, 5, 4, 6, 4, 9, 4, 10, 5, 0, 5, 1, 5, 4, 5, 5, 5, 6, 5, 9, 5, 10, 6, 0, 6, 1, 6, 9, 6, 10, 7, 0, 7, 1, 7, 9, 7, 10, 8, 0, 8, 1, 8, 9, 8, 10, 9, 0, 9, 1, 9, 9, 9, 10, 10, 0, 10, 1, 10, 4, 10, 5, 10, 6, 10, 9, 10, 10, 11, 0, 11, 1, 11, 4, 11, 5, 11, 6, 11, 9, 11, 10, 12, 0, 12, 1, 12, 9, 12, 10, 13, 0, 13, 1, 13, 9, 13, 10, 14, 0, 14, 1, 14, 2, 14, 3, 14, 4, 14, 5, 14, 6, 14, 7, 14, 8, 14, 9, 14, 10, 15, 0, 15, 1, 15, 2, 15, 3, 15, 4, 15, 5, 15, 6, 15, 7, 15, 8, 15, 9, 15, 10}, 
  {}, {}};

int[][] MovableWallsInput = {{}, {6, 5}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {7, 5}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}};


void setup() {
  size(768, 528);
  background(255);
  rectMode(CENTER);
  Enemies = new ArrayList<Enemies>();
  d = new Tektite(48, 48, width/2 -24, height - 72);
  u = new Aquamentus(48, 48, width/2-24, height - 72);
  l = new Peahat(48, 48, width/2-24, height -72);
  Enemies.add(d);
  Enemies.add(u);
  Enemies.add(l);
  h = new Hero(48, 48, width/2-24, height - 72);
  coolDown = 0;
  ListOfWalls = new ArrayList<Wall>();
  ListOfMovableWalls = new ArrayList<MovableWall>();
  MovableRoomsList = new ArrayList<ArrayList<ArrayList<MovableWall>>>();
  //int a = (int)(random(11));
  //for (int i = 0;i < a;i += 1) {
  //  Wall 
  ListOfRooms = new ArrayList<ArrayList<ArrayList<Wall>>>();
  for (int i = 0; i < 6; i += 1) {
    ListOfRooms.add(new ArrayList<ArrayList<Wall>>());
    MovableRoomsList.add(new ArrayList<ArrayList<MovableWall>>());
    for (int j = 0; j < 6; j += 1) {
      ListOfRooms.get(i).add(new ArrayList<Wall>());
      MovableRoomsList.get(i).add(new ArrayList<MovableWall>());
    }
  }
  for (int i = 0; i < ListOfRooms.size(); i += 1) {
    for (int j = 0; j < ListOfRooms.get(i).size(); j += 1) {
      for (int k = 0; k < WallsInput[i*6 + j].length; k += 2) {
        ListOfRooms.get(i).get(j).add(new Wall(WallsInput[i*6 + j][k], WallsInput[i*6 + j][k+1]));
      }
      if (MovableWallsInput[i*6+j].length > 0) {
        MovableRoomsList.get(i).get(j).add(new MovableWall(MovableWallsInput[i*6+j][0], MovableWallsInput[i*6+j][1]));
      }
    }
  }

  //w = new Wall(3,3);
  //ListOfWalls.add(w);
}

void draw() {
  ListOfWalls = ListOfRooms.get(roomY).get(roomX);
  background(255);
  //fill(255,0,0);
  //rect(72,72,144,144);
  for (Wall w : ListOfWalls) {
    w.display();
  }
  for (MovableWall w : ListOfMovableWalls) {
    w.display();
  }
  if (coolDown > 0) {
    coolDown -= 1;
    h.x += h.slowMoveX;
    h.y += h.slowMoveY;
  }
  if (movingWall != null && movingWall.coolDown > 0) {
    movingWall.coolDown -= 1;
    movingWall.changeXCor(movingWall.slowMoveX);
    movingWall.changeYCor(movingWall.slowMoveY);
    if (movingWall.coolDown == 0) {
      movingWall = null;
    }
  }
  h.move();
  h.attack();
  h.display();
  showEnemies(); // displays all the Enemies
  die();         // checks the list of enemies and removes them if they need to die
  showEnemies();
  die();
  moveEnemies();
}

void die() {
  for ( int i = 0; i < Enemies.size(); i++) {
    if (Enemies.get(i).die()) {
      Enemies.remove(i);
      i--;
    }
  }
}

void showEnemies() {
  for ( int i = 0; i < Enemies.size(); i++) {
    Enemies.get(i).display();
  }
}


void moveEnemies() {
  for ( int i =0; i < Enemies.size(); i++) {
    Enemies.get(i).move();
  }
}
